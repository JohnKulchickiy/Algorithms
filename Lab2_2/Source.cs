using System;

namespace Khnut_Morris_Pratt_Function
{
    public class Source
    {
        /// <summary>
        /// Алгоритм нахождения подстроки Кнутта-Морриса-Пратта 
        /// </summary>
        /// <param name="MainString">Текст, в котором нужно найти</param>
        /// <param name="PatternString">Текст, который нужно найти</param>
        public static void Khnut_Morris_Pratt(string MainString, string PatternString)
        {
            int[] SubString = Prefix_Function(PatternString);
            int k = 0; // Индексатор основной строки
            int l = 0; // Индекстор для преффикс массива (для поиска)
            bool failcounter = false; // Счетчик выполнения (для понимания найдены совпадения или нет)
            do
            {
                if (MainString[k] == PatternString[l]) // Элементы строки и подстроки равны - продолжаем сравнение в следующей интерации  
                {
                    k++; //Увеличиваем индекс для строки
                    l++; //Увеличиваем индекс для подстроки 
                    if (l == PatternString.Length) // Если найдено полное совпадение по всем элементам - вхождение найдено
                    {
                        Console.WriteLine($"Подстрока найдена в позиции {k - l}!");
                        l = SubString[l - 1]; //Возвращаем индекс подстроки согласно коэффициентам в префикс массиве 
                        failcounter = true;
                    }
                }
                else
                {
                    if (l == 0) // Если индескс подстроки равен 0 - увеличмваем индес строки. Элементы не равны
                    {
                        k++;
                    }
                    else // Если индекс посдтроки не равен 0 И элементы НЕ равны - используем значения из префикс массива и получаем новый индекс подстроки 
                    {
                        l = SubString[l - 1];
                    }
                }
            } while (k < MainString.Length);
            if (failcounter == false)
            {
                Console.WriteLine("Искомой подстроки в строке нет!");
            }
        }
        /// <summary>
        /// Префикс-функция. С её помощью мы будем находить искомую подстроку в строке
        /// Идея состоит в том, что бы создать массив коэффициентов смещения для каждого символа подстроки
        /// при окончании сравнения (будь то полностью удачное сравнение или частично неудачное).
        /// </summary>
        /// <param name="String_Obraz"> Искомая строка </param>
        /// <returns>Возвращает массив индексов смещения, которые мы будем использовать для работы с индексом подстроки</returns>
        public static int[] Prefix_Function(string String_Obraz)
        {
            int[] PiMass = new int[String_Obraz.Length];    // Создаем массив, в который будем заносить масимальные длины суффиксов/префиксов для взятой длинны
            PiMass[0] = 0; // Всегда равен 0 так как элемент для сравнения 1
            int j = 0;
            int i = 1;
            do
            {
                if (String_Obraz[i] == String_Obraz[j]) // Условие, при котором суффикс/префикс равны
                {
                    PiMass[i] = j + 1; // Заносим значение максимальной длинны суффикса/префикса
                    i++; // Увеличиваем размерность сравниваемого массива
                    j++;
                }
                else
                {
                    if (j == 0) // Условие, при котором левая граница становится равна 0
                    {
                        PiMass[i] = 0; // Суффикс/префикс одинаковой длинны не найдены
                        i++;
                    }
                    else
                    {
                        j = PiMass[j - 1]; // Если суффикс/префикс не одинаковой длинны и левая граница не 0
                    }
                }
            } while (i != String_Obraz.Length);
            return PiMass;
        }
    }
}
